{"version":3,"sources":["webpack:///./src/components/atoms/Anchor/anchor.tsx","webpack:///./src/components/atoms/Heading/heading1.tsx","webpack:///./src/components/atoms/Heading/heading2.tsx","webpack:///./src/components/atoms/Icon/techIcon.tsx","webpack:///./src/components/organisms/visuals/main.tsx","webpack:///./node_modules/@material-ui/core/esm/Grid/Grid.js","webpack:///./src/internal/about.mdx","webpack:///./src/components/organisms/visuals/about.tsx","webpack:///./src/components/organisms/visuals/works.tsx","webpack:///./src/components/organisms/visuals/skills.tsx","webpack:///./src/components/organisms/visuals/contact.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/styles/base-style.ts","webpack:///./src/styles/visuals.ts"],"names":["anchor","css","height","Anchor","id","heading","size","fontSize","textAlign","Heading1","children","Heading2","wrap","width","rect","icon","maxWidth","text","display","TechIcon","filename","main","background","justifyContent","alignItems","Main","visuals","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","props","ref","_props$alignContent","alignContent","_props$alignItems","classes","classNameProp","className","_props$component","component","Component","_props$container","container","_props$direction","direction","_props$item","item","_props$justify","justify","_props$lg","lg","_props$md","md","_props$sm","sm","_props$spacing","spacing","_props$wrap","_props$xl","xl","_props$xs","xs","_props$zeroMinWidth","zeroMinWidth","other","root","withStyles","theme","boxSizing","flexWrap","margin","minWidth","flexDirection","breakpoint","styles","forEach","themeSpacing","padding","generateGutter","breakpoints","keys","reduce","accumulator","key","globalStyles","Math","round","flexBasis","flexGrow","up","generateGrid","name","layoutProps","_frontmatter","MDXContent","components","mdxType","isMDXComponent","about","description","About","works","borderTop","borderBottom","Works","skills","skillArray","tech","Skills","map","skill","contact","Contact","StyledComponent","baseStyle","path","title","pathname","minHeight"],"mappings":"+JAGMA,EAASC,YAAI,CACjBC,OAAQ,SAOGC,EAAgC,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAH,OAAY,mBAAKH,IAAKD,EAAQI,GAAIA,KCRzEC,EAAU,SAACC,GAAD,OACdL,YAAI,CACFM,SAAaD,EAAL,MACRE,UAAW,YAOFC,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUJ,EAAb,EAAaA,KAAb,OAAwB,kBAAIL,IAAKI,EAAQC,IAAQI,ICVpFL,EAAU,SAACC,GAAD,OACdL,YAAI,CACFM,SAAaD,EAAL,MACRE,UAAW,YAOFG,EAA4B,SAAC,GAAD,IAAGD,EAAH,EAAGA,SAAUJ,EAAb,EAAaA,KAAb,OAAwB,kBAAIL,IAAKI,EAAQC,IAAQI,I,YCHpFE,EAAOX,YAAI,CACfY,MAAUC,QACVZ,OAAWY,UAGPC,EAAOd,YAAI,CACfe,SAAaF,UAGTG,EAAOhB,YAAI,CACfiB,QAAS,QACTF,SAAaF,QACbN,UAAW,SACXD,SAAU,WAGCY,EAA4B,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUV,EAAb,EAAaA,SAAb,OACvC,8BACE,mBAAKT,IAAKW,GACR,YAAC,IAAD,CAAUQ,SAAUA,EAAUnB,IAAKc,KAErC,oBAAMd,IAAKgB,GAAOP,K,wBCzBhBW,EAAOpB,YAAI,CACfqB,WAAY,iDACZJ,QAAS,OACTK,eAAgB,SAChBC,WAAY,WAGDC,EAAkB,kBAC7B,mBAAKxB,IAAG,YAAE,CAACyB,IAASL,KAClB,uBACE,YAAC,EAAD,CAAUf,KAAM,KAAhB,gBACA,YAAC,EAAD,CAAUA,KAAM,KAAhB,2B,0HCMFqB,EAAW,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC1CC,EAAa,CAAC,QAAQ,EAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAAI,IA4CnE,SAASC,EAAUC,GACjB,IAAIC,EAAMC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAC1EG,EAAQC,WAAWN,GACvB,MAAO,GAAGO,OAAOF,EAAQJ,GAAKM,OAAOC,OAAOR,GAAKS,QAAQD,OAAOH,GAAQ,KAAO,MA6B1E,IA6HH,EAAoB,cAAiB,SAAcK,EAAOC,GAC5D,IAAIC,EAAsBF,EAAMG,aAC5BA,OAAuC,IAAxBD,EAAiC,UAAYA,EAC5DE,EAAoBJ,EAAMhB,WAC1BA,OAAmC,IAAtBoB,EAA+B,UAAYA,EACxDC,EAAUL,EAAMK,QAChBC,EAAgBN,EAAMO,UACtBC,EAAmBR,EAAMS,UACzBC,OAAiC,IAArBF,EAA8B,MAAQA,EAClDG,EAAmBX,EAAMY,UACzBA,OAAiC,IAArBD,GAAsCA,EAClDE,EAAmBb,EAAMc,UACzBA,OAAiC,IAArBD,EAA8B,MAAQA,EAClDE,EAAcf,EAAMgB,KACpBA,OAAuB,IAAhBD,GAAiCA,EACxCE,EAAiBjB,EAAMkB,QACvBA,OAA6B,IAAnBD,EAA4B,aAAeA,EACrDE,EAAYnB,EAAMoB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYrB,EAAMsB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAYvB,EAAMwB,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAiBzB,EAAM0B,QACvBA,OAA6B,IAAnBD,EAA4B,EAAIA,EAC1CE,EAAc3B,EAAM5B,KACpBA,OAAuB,IAAhBuD,EAAyB,OAASA,EACzCC,EAAY5B,EAAM6B,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAY9B,EAAM+B,GAClBA,OAAmB,IAAdD,GAA+BA,EACpCE,EAAsBhC,EAAMiC,aAC5BA,OAAuC,IAAxBD,GAAyCA,EACxDE,EAAQ,YAAyBlC,EAAO,CAAC,eAAgB,aAAc,UAAW,YAAa,YAAa,YAAa,YAAa,OAAQ,UAAW,KAAM,KAAM,KAAM,UAAW,OAAQ,KAAM,KAAM,iBAE1MO,EAAY,YAAKF,EAAQ8B,KAAM7B,EAAeM,GAAa,CAACP,EAAQO,UAAuB,IAAZc,GAAiBrB,EAAQ,cAAcR,OAAOC,OAAO4B,MAAaV,GAAQX,EAAQW,KAAMiB,GAAgB5B,EAAQ4B,aAA4B,QAAdnB,GAAuBT,EAAQ,gBAAgBR,OAAOC,OAAOgB,KAAuB,SAAT1C,GAAmBiC,EAAQ,WAAWR,OAAOC,OAAO1B,KAAwB,YAAfY,GAA4BqB,EAAQ,kBAAkBR,OAAOC,OAAOd,KAAgC,YAAjBmB,GAA8BE,EAAQ,oBAAoBR,OAAOC,OAAOK,KAA6B,eAAZe,GAA4Bb,EAAQ,cAAcR,OAAOC,OAAOoB,MAAmB,IAAPa,GAAgB1B,EAAQ,WAAWR,OAAOC,OAAOiC,MAAc,IAAPP,GAAgBnB,EAAQ,WAAWR,OAAOC,OAAO0B,MAAc,IAAPF,GAAgBjB,EAAQ,WAAWR,OAAOC,OAAOwB,MAAc,IAAPF,GAAgBf,EAAQ,WAAWR,OAAOC,OAAOsB,MAAc,IAAPS,GAAgBxB,EAAQ,WAAWR,OAAOC,OAAO+B,MACl2B,OAAoB,gBAAoBnB,EAAW,YAAS,CAC1DH,UAAWA,EACXN,IAAKA,GACJiC,OAoIU,EArBE,OAAAE,EAAA,IAnRG,SAAgBC,GAClC,OAAO,YAAS,CAEdF,KAAM,GAGNvB,UAAW,CACT0B,UAAW,aACX5D,QAAS,OACT6D,SAAU,OACVlE,MAAO,QAIT2C,KAAM,CACJsB,UAAW,aACXE,OAAQ,KAKVP,aAAc,CACZQ,SAAU,GAIZ,sBAAuB,CACrBC,cAAe,UAIjB,8BAA+B,CAC7BA,cAAe,kBAIjB,2BAA4B,CAC1BA,cAAe,eAIjB,iBAAkB,CAChBH,SAAU,UAIZ,uBAAwB,CACtBA,SAAU,gBAIZ,wBAAyB,CACvBvD,WAAY,UAId,4BAA6B,CAC3BA,WAAY,cAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBA,WAAY,YAId,0BAA2B,CACzBmB,aAAc,UAIhB,8BAA+B,CAC7BA,aAAc,cAIhB,4BAA6B,CAC3BA,aAAc,YAIhB,iCAAkC,CAChCA,aAAc,iBAIhB,gCAAiC,CAC/BA,aAAc,gBAIhB,oBAAqB,CACnBpB,eAAgB,UAIlB,sBAAuB,CACrBA,eAAgB,YAIlB,2BAA4B,CAC1BA,eAAgB,iBAIlB,0BAA2B,CACzBA,eAAgB,gBAIlB,0BAA2B,CACzBA,eAAgB,iBA/ItB,SAAwBsD,EAAOM,GAC7B,IAAIC,EAAS,GAgBb,OAfAzD,EAAS0D,SAAQ,SAAUnB,GACzB,IAAIoB,EAAeT,EAAMX,QAAQA,GAEZ,IAAjBoB,IAIJF,EAAO,WAAW/C,OAAO8C,EAAY,KAAK9C,OAAO6B,IAAY,CAC3Dc,OAAQ,IAAI3C,OAAOR,EAAUyD,EAAc,IAC3CzE,MAAO,eAAewB,OAAOR,EAAUyD,GAAe,KACtD,YAAa,CACXC,QAAS1D,EAAUyD,EAAc,SAIhCF,EAgIJI,CAAeX,EAAO,MAAOA,EAAMY,YAAYC,KAAKC,QAAO,SAAUC,EAAaC,GAGnF,OApMJ,SAAsBC,EAAcjB,EAAOM,GACzC,IAAIC,EAAS,GACbxD,EAAWyD,SAAQ,SAAU/E,GAC3B,IAAIuF,EAAM,QAAQxD,OAAO8C,EAAY,KAAK9C,OAAO/B,GAEjD,IAAa,IAATA,EAUJ,GAAa,SAATA,EAAJ,CAUA,IAAIO,EAAQ,GAAGwB,OAAO0D,KAAKC,MAAM1F,EAAO,GAAK,KAAQ,IAAM,KAG3D8E,EAAOS,GAAO,CACZI,UAAWpF,EACXqF,SAAU,EACVlF,SAAUH,QAfVuE,EAAOS,GAAO,CACZI,UAAW,OACXC,SAAU,EACVlF,SAAU,aAZZoE,EAAOS,GAAO,CACZI,UAAW,EACXC,SAAU,EACVlF,SAAU,WAyBG,OAAfmE,EACF,YAASW,EAAcV,GAEvBU,EAAajB,EAAMY,YAAYU,GAAGhB,IAAeC,EA6JjDgB,CAAaR,EAAaf,EAAOgB,GAC1BD,IACN,OAwJ+B,CAClCS,KAAM,WADS,CAEd,G,iPCpXI,IAODC,EAAc,CAClBC,aAR0B,IAWb,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGjE,E,oIACF,mBACD,OAAO,YALS,UAKT,KAAe8D,EAAiB9D,EAAhC,CAAuCiE,WAAYA,EAAYC,QAAQ,cAC5E,2DACA,wIACA,sGACA,oHACA,uGAKJF,EAAWG,gBAAiB,ECtB5B,IAAMC,EAAQ3G,YAAI,CAChB+E,OAAQ,WAGJqB,EAAOpG,YAAI,CACfO,UAAW,WAGPqG,EAAc5G,YAAI,CACtBM,SAAU,WAGCuG,EAAmB,kBAC9B,mBAAK7G,IAAG,YAAE,CAACyB,IAASkF,KAClB,YAAC,EAAD,CAAUtG,KAAM,KAAhB,YACA,YAAC,EAAD,CAAM8C,WAAS,EAACc,QAAS,GACvB,YAAC,EAAD,CAAMV,MAAI,EAACe,GAAI,GAAIP,GAAI,GACrB,YAAC,IAAD,CAAU5C,SAAS,gBAErB,YAAC,EAAD,CAAMoC,MAAI,EAACe,GAAI,GAAIP,GAAI,GACrB,mBAAK/D,IAAKoG,GACR,YAAC,EAAD,CAAU/F,KAAM,GAAhB,QACA,YAAC,EAAD,CAAUA,KAAM,KAAhB,cAEF,mBAAKL,IAAK4G,GACR,YAAC,EAAD,WC5BJE,EAAQ9G,YAAI,CAChB+G,UAAW,mBACXC,aAAc,sBAGHC,EAAmB,kBAC9B,mBAAKjH,IAAG,YAAE,CAACyB,IAASqF,KAClB,YAAC,EAAD,CAAUzG,KAAM,KAAhB,cCNE6G,EAASlH,YAAI,CACjB+E,OAAQ,WAGJoC,EAAa,CACjB,CAAErG,KAAM,iBAAkBsG,KAAM,cAChC,CAAEtG,KAAM,iBAAkBsG,KAAM,cAChC,CAAEtG,KAAM,UAAWsG,KAAM,UACzB,CAAEtG,KAAM,WAAYsG,KAAM,WAC1B,CAAEtG,KAAM,YAAasG,KAAM,SAC3B,CAAEtG,KAAM,aAAcsG,KAAM,UAC5B,CAAEtG,KAAM,WAAYsG,KAAM,QAC1B,CAAEtG,KAAM,UAAWsG,KAAM,OACzB,CAAEtG,KAAM,WAAYsG,KAAM,QAC1B,CAAEtG,KAAM,aAAcsG,KAAM,UAC5B,CAAEtG,KAAM,WAAYsG,KAAM,QAC1B,CAAEtG,KAAM,eAAgBsG,KAAM,YAC9B,CAAEtG,KAAM,cAAesG,KAAM,WAC7B,CAAEtG,KAAM,iBAAkBsG,KAAM,cAChC,CAAEtG,KAAM,eAAgBsG,KAAM,aAC9B,CAAEtG,KAAM,aAAcsG,KAAM,aAC5B,CAAEtG,KAAM,UAAWsG,KAAM,OACzB,CAAEtG,KAAM,aAAcsG,KAAM,UAC5B,CAAEtG,KAAM,YAAasG,KAAM,SAC3B,CAAEtG,KAAM,cAAesG,KAAM,WAC7B,CAAEtG,KAAM,YAAasG,KAAM,UAGhBC,EAAoB,kBAC/B,mBAAKrH,IAAG,YAAE,CAACyB,IAASyF,KAClB,YAAC,EAAD,CAAU7G,KAAM,KAAhB,aACA,YAAC,EAAD,CAAM8C,WAAS,EAACc,QAAS,GACtBkD,EAAWG,KAAI,SAACC,GAAD,OACd,YAAC,EAAD,CAAMhE,MAAI,EAACe,GAAI,EAAGP,GAAI,EAAG6B,IAAK2B,EAAMH,MAClC,YAAC,EAAD,CAAUjG,SAAUoG,EAAMzG,MAAOyG,EAAMH,aCnC3CI,EAAUxH,YAAI,CAClB+G,UAAW,kBACXC,aAAc,mBAGHS,EAAqB,kBAChC,mBAAKzH,IAAG,YAAE,CAACyB,IAAS+F,KAClB,YAAC,EAAD,CAAUnH,KAAM,KAAhB,gBCJE4C,EAAuB,SAAC,GAAD,IAAGH,EAAH,EAAGA,UAAH,OAC3B,oBAAMA,UAAWA,GACf,2BACE,YAAC,EAAD,CAAQ3C,GAAG,QACX,YAAC,EAAD,OAEF,2BACE,YAAC,EAAD,CAAQA,GAAG,UACX,YAAC,EAAD,OAEF,2BACE,YAAC,EAAD,CAAQA,GAAG,UACX,YAAC,EAAD,OAEF,2BACE,YAAC,EAAD,CAAQA,GAAG,WACX,YAAC,EAAD,OAEF,2BACE,YAAC,EAAD,CAAQA,GAAG,YACX,YAAC,EAAD,SAKAuH,EAAkB,YAAOzE,EAAP,sBACpB0E,KAGW,0BAAGC,EAAH,EAAGA,KAAH,OACb,8BACE,YAAC,IAAD,CAAKC,MAAM,MAAMC,SAAUF,IAC3B,YAACF,EAAD,S,sHCtCW,GAAf,kOCAajG,EAAUzB,YAAI,CACzB+H,UAAW","file":"component---src-pages-index-tsx-35c2c471518981652030.js","sourcesContent":["import React from 'react';\nimport { css } from '@emotion/core';\n\nconst anchor = css({\n  height: `10vh`,\n});\n\ntype anchorProp = {\n  id: string;\n};\n\nexport const Anchor: React.FCX<anchorProp> = ({ id }) => <div css={anchor} id={id} />;\n","import React from 'react';\nimport { css } from '@emotion/core';\n\nconst heading = (size: number) =>\n  css({\n    fontSize: `${size}rem`,\n    textAlign: `center`,\n  });\n\ntype size = {\n  size: number;\n};\n\nexport const Heading1: React.FCX<size> = ({ children, size }) => <h1 css={heading(size)}>{children}</h1>;\n","import React from 'react';\nimport { css } from '@emotion/core';\n\nconst heading = (size: number) =>\n  css({\n    fontSize: `${size}rem`,\n    textAlign: `center`,\n  });\n\ntype size = {\n  size: number;\n};\n\nexport const Heading2: React.FCX<size> = ({ children, size }) => <h2 css={heading(size)}>{children}</h2>;\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport AnyImage from 'src/components/utils/any-image';\n\ntype prop = {\n  filename: string;\n};\n\nconst rect = 120;\n\nconst wrap = css({\n  width: `${rect}px`,\n  height: `${rect}px`,\n});\n\nconst icon = css({\n  maxWidth: `${rect}px`,\n});\n\nconst text = css({\n  display: `block`,\n  maxWidth: `${rect}px`,\n  textAlign: `center`,\n  fontSize: `2.0rem`,\n});\n\nexport const TechIcon: React.FCX<prop> = ({ filename, children }) => (\n  <>\n    <div css={wrap}>\n      <AnyImage filename={filename} css={icon} />\n    </div>\n    <span css={text}>{children}</span>\n  </>\n);\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport { visuals } from 'src/styles/index';\nimport { Heading1, Heading2 } from 'src/components/atoms';\n\n// css\nconst main = css({\n  background: `linear-gradient(blue, white 25% 75%, red 100%)`,\n  display: `flex`,\n  justifyContent: `center`,\n  alignItems: `center`,\n});\n\nexport const Main: React.FCX = () => (\n  <div css={[visuals, main]}>\n    <div>\n      <Heading1 size={4.8}>Woods At Web</Heading1>\n      <Heading2 size={2.4}>Welcome my web site!</Heading2>\n    </div>\n  </div>\n);\n","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.array.reduce\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.for-each\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes = {\n  /**\n   * Defines the `align-content` style property.\n   * It's applied for all screen sizes.\n   */\n  alignContent: PropTypes.oneOf(['stretch', 'center', 'flex-start', 'flex-end', 'space-between', 'space-around']),\n\n  /**\n   * Defines the `align-items` style property.\n   * It's applied for all screen sizes.\n   */\n  alignItems: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'stretch', 'baseline']),\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  container: PropTypes.bool,\n\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   */\n  direction: PropTypes.oneOf(['row', 'row-reverse', 'column', 'column-reverse']),\n\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   */\n  item: PropTypes.bool,\n\n  /**\n   * Defines the `justify-content` style property.\n   * It is applied for all screen sizes.\n   */\n  justify: PropTypes.oneOf(['flex-start', 'center', 'flex-end', 'space-between', 'space-around', 'space-evenly']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `lg` breakpoint and wider screens if not overridden.\n   */\n  lg: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `md` breakpoint and wider screens if not overridden.\n   */\n  md: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `sm` breakpoint and wider screens if not overridden.\n   */\n  sm: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the space between the type `item` component.\n   * It can only be used on a type `container` component.\n   */\n  spacing: PropTypes.oneOf(SPACINGS),\n\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap', 'wrap-reverse']),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for the `xl` breakpoint and wider screens.\n   */\n  xl: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * Defines the number of grids the component is going to use.\n   * It's applied for all the screen sizes with the lowest priority.\n   */\n  xs: PropTypes.oneOf([false, 'auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]),\n\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`1991年、香川県に生まれたWebエンジニア。またの名をうずらさん。`}</p>\n    <p>{`早稲田大学在学中にWeb制作を、卒業後金融系SIerでエンジニアとして上流工程から下流工程まで一連の開発を経験。2019年にフリーランスへ転身。フロントエンド技術を中心にWebアプリケーション・システムの開発を行っている。`}</p>\n    <p>{`サンフランシスコ・上海への海外留学経験から、むしろ日本の良さを再認識。Webエンジニアという仕事を通して日本をより良くするシステム開発に携わっていきたい。`}</p>\n    <p>{`趣味はJリーグ。FC東京の大ファン。一生青と赤。隣の頭文字Vのクラブとの試合じゃ「緑は大っ○い、東京！」と歌っていたこともあったのに、何の因果か緑のVue.jsをメインで扱っている。`}</p>\n    <p>{`プライベートでは1児の父。可愛くてしょうがない！尋常じゃない成長力と未来を備えた我が子に負けないように、昨日よりも1レベルアップできるように精進している。`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import React from 'react';\nimport { css } from '@emotion/core';\nimport AnyImage from 'src/components/utils/any-image';\nimport { Heading1, Heading2 } from 'src/components/atoms';\nimport { visuals } from 'src/styles';\nimport Grid from '@material-ui/core/Grid';\nimport AboutMDX from 'src/internal/about.mdx';\n\nconst about = css({\n  margin: `0 10vw`,\n});\n\nconst name = css({\n  textAlign: `center`,\n});\n\nconst description = css({\n  fontSize: `1.8rem`,\n});\n\nexport const About: React.FCX = () => (\n  <div css={[visuals, about]}>\n    <Heading1 size={4.8}>About Me</Heading1>\n    <Grid container spacing={3}>\n      <Grid item xs={12} sm={6}>\n        <AnyImage filename='myicon.png' />\n      </Grid>\n      <Grid item xs={12} sm={6}>\n        <div css={name}>\n          <Heading2 size={4}>妹尾 弦</Heading2>\n          <Heading2 size={3.2}>Gen Senoo</Heading2>\n        </div>\n        <div css={description}>\n          <AboutMDX />\n        </div>\n      </Grid>\n    </Grid>\n  </div>\n);\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport { Heading1 } from 'src/components/atoms';\nimport { visuals } from 'src/styles';\n\nconst works = css({\n  borderTop: `10px solid black`,\n  borderBottom: `10px solid purple`,\n});\n\nexport const Works: React.FCX = () => (\n  <div css={[visuals, works]}>\n    <Heading1 size={4.8}>My Works</Heading1>\n  </div>\n);\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport { Heading1, TechIcon } from 'src/components/atoms';\nimport { visuals } from 'src/styles';\nimport Grid from '@material-ui/core/Grid';\n\nconst skills = css({\n  margin: `0 15vw`,\n});\n\nconst skillArray = [\n  { icon: `javascript.png`, tech: `JavaScript` },\n  { icon: `typescript.png`, tech: `TypeScript` },\n  { icon: `vue.png`, tech: `Vue.js` },\n  { icon: `nuxt.jpg`, tech: `Nuxt.js` },\n  { icon: `react.png`, tech: `React` },\n  { icon: `gatsby.png`, tech: `Gatsby` },\n  { icon: `html.png`, tech: `HTML` },\n  { icon: `css.jpg`, tech: `CSS` },\n  { icon: `sass.png`, tech: `Sass` },\n  { icon: `stylus.png`, tech: `Stylus` },\n  { icon: `java.png`, tech: `Java` },\n  { icon: `firebase.png`, tech: `Firebase` },\n  { icon: `netlify.jpg`, tech: `Netlify` },\n  { icon: `contentful.png`, tech: `Contentful` },\n  { icon: `microcms.png`, tech: `micro CMS` },\n  { icon: `oracle.jpg`, tech: `Oracle DB` },\n  { icon: `git.png`, tech: `Git` },\n  { icon: `github.jpg`, tech: `GitHub` },\n  { icon: `slack.jpg`, tech: `Slack` },\n  { icon: `backlog.png`, tech: `Backlog` },\n  { icon: `figma.png`, tech: `Figma` },\n];\n\nexport const Skills: React.FCX = () => (\n  <div css={[visuals, skills]}>\n    <Heading1 size={4.8}>Skill Set</Heading1>\n    <Grid container spacing={3}>\n      {skillArray.map((skill) => (\n        <Grid item xs={6} sm={2} key={skill.tech}>\n          <TechIcon filename={skill.icon}>{skill.tech}</TechIcon>\n        </Grid>\n      ))}\n    </Grid>\n  </div>\n);\n","import React from 'react';\nimport { css } from '@emotion/core';\nimport { Heading1 } from 'src/components/atoms';\nimport { visuals } from 'src/styles';\n\nconst contact = css({\n  borderTop: `10px solid blue`,\n  borderBottom: `10px solid red`,\n});\n\nexport const Contact: React.FCX = () => (\n  <div css={[visuals, contact]}>\n    <Heading1 size={4.8}>Contact Me</Heading1>\n  </div>\n);\n","import React from 'react';\nimport { SEO } from 'src/components';\nimport { Anchor } from 'src/components/atoms';\nimport { Main, About, Works, Skills, Contact } from 'src/components/organisms';\nimport { baseStyle } from 'src/styles';\n\nimport styled from '@emotion/styled';\n\nconst Component: React.FCX = ({ className }) => (\n  <main className={className}>\n    <section>\n      <Anchor id='top' />\n      <Main />\n    </section>\n    <section>\n      <Anchor id='about' />\n      <About />\n    </section>\n    <section>\n      <Anchor id='works' />\n      <Works />\n    </section>\n    <section>\n      <Anchor id='skills' />\n      <Skills />\n    </section>\n    <section>\n      <Anchor id='contact' />\n      <Contact />\n    </section>\n  </main>\n);\n\nconst StyledComponent = styled(Component)`\n  ${baseStyle}\n`;\n\nexport default ({ path }: { path: string }): JSX.Element => (\n  <>\n    <SEO title='Top' pathname={path} />\n    <StyledComponent />\n  </>\n);\n","import { css } from '@emotion/core';\n\nexport default css`\n  flex: 1;\n\n  width: 100%;\n  padding-bottom: 5vh;\n\n  margin: 0 auto;\n\n  @media screen and (max-width: 1100px) {\n  }\n  @media screen and (max-width: 768px) {\n  }\n  @media screen and (max-width: 480px) {\n  }\n  @media screen and (max-height: 430px) {\n  }\n`;\n","import { css } from '@emotion/core';\n\nexport const visuals = css({\n  minHeight: `90vh`,\n});\n"],"sourceRoot":""}